{"version":3,"sources":["Length.js","beep.mp3","App.js","reportWebVitals.js","index.js"],"names":["Length","title","changeTime","type","time","formatTime","className","onClick","App","useState","displayTime","setDisplayTime","breakTime","setBreakTime","sessionTime","setSessionTime","timerOn","setTimerOn","onBreak","setOnBreak","Audio","audio","breakAudio","useEffect","playSound","minutes","Math","floor","seconds","amount","prev","currentTime","play","console","log","Date","getTime","nextDate","onBreakVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAwBeA,EAtBF,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,MAAMC,EAAoC,EAApCA,WAAWC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,KAAKC,EAAe,EAAfA,WACtC,OACI,gCACI,6BAAKJ,IACL,sBAAKK,UAAU,YAAf,UACE,wBAAQA,UAAU,kCAChBC,QAAS,kBAAIL,GAAY,GAAGC,IAD9B,SAGM,mBAAGG,UAAU,iBAAb,8BAGJ,6BAAKD,EAAWD,KAChB,wBAAQE,UAAU,kCACXC,QAAS,kBAAIL,EAAW,GAAGC,IADlC,SAGI,mBAAGG,UAAU,iBAAb,mCCjBL,MAA0B,iCCwJ1BE,MAjJf,WACA,MAAoCC,mBAAS,MAA7C,mBAAMC,EAAN,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,KAAzC,mBAAMG,EAAN,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,MAA7C,mBAAMK,EAAN,KAAkBC,EAAlB,KACA,EAA4BN,oBAAS,GAArC,mBAAMO,EAAN,KAAcC,EAAd,KACA,EAA4BR,oBAAS,GAArC,mBAAMS,EAAN,KAAcC,EAAd,KACA,EAAkCV,mBAAS,IAAIW,MAAMC,IAArD,mBAAMC,EAAN,UAEAC,qBAAU,WACJb,GAAe,GACjBS,GAAW,GACXK,KACUR,GAAWN,IAAgBE,GACrCO,GAAW,KAGZ,CAACT,EAAaQ,EAASF,EAASJ,EAAWE,IAI9C,IAAMT,EAAY,SAACD,GACjB,IAAIqB,EAAUC,KAAKC,MAAMvB,EAAK,IAC1BwB,EAAUxB,EAAO,GACrB,OACCqB,EAAQ,GAAG,IAAIA,EAAQA,GAAS,KAC9BG,EAAQ,GAAG,IAAIA,EAAQA,IAKtB1B,EAAW,SAAC2B,EAAO1B,GACvB,GAAU,UAAPA,EAAe,CAChB,GAAGS,GAAW,IAAMiB,EAAQ,EAC1B,OAEAhB,GAAa,SAACiB,GAAD,OAAQA,EAAKD,SAE1B,CACF,GAAGf,GAAa,IAAMe,EAAQ,EAC5B,OAEFd,GAAe,SAACe,GAAD,OAAQA,EAAKD,KACxBb,GACFL,EAAeG,EAAYe,KAsD3BL,EAAW,WAChBF,EAAWS,YAAc,EACxBT,EAAWU,QAIX,OACE,sBAAK1B,UAAU,eAAf,UAEE,gDACA,sBAAKA,UAAU,iBAAf,UACA,cAAC,EAAD,CAAQL,MAAO,eACbC,WAAYA,EACZC,KAAM,QACNC,KAAMQ,EACNP,WAAYA,IAGpB,cAAC,EAAD,CAAQJ,MAAO,iBACPC,WAAYA,EACZC,KAAM,UACNC,KAAMU,EACNT,WAAYA,OAIpB,6BAAKa,EAAQ,QAAQ,YACrB,6BAAKb,EAAWK,KAChB,wBAAQJ,UAAU,kCAChBC,QA9EgB,WAChB0B,QAAQC,IAAI,SAED,IAAIC,MAAOC,UADtB,IAEIC,GAAW,IAAIF,MAAOC,UAFb,IAGTE,EAAkBpB,EAEtB,IAAIF,EAAQ,CACV,IAAIuB,EAAWC,aAAY,YAClB,IAAIL,MAAOC,UAEVC,IACJ1B,GAAe,SAAAmB,GACb,OAAGA,GAAM,IAAMQ,GAEbA,GAAkB,EAClBnB,GAAW,GACJP,GAEDkB,GAAM,GAAKQ,GAEjBA,GAAkB,EAClBnB,GAAW,GACJL,GAEFgB,EAAO,KAEdO,GAzBG,OA2BT,IAEFI,aAAaC,QACbD,aAAaE,QAAQ,cAAcJ,GAGlCvB,GACD4B,cAAcH,aAAaI,QAAQ,gBAErC5B,GAAYD,IAuCd,SAGCA,EACG,mBAAGV,UAAU,iBAAb,gCAEF,mBAAGA,UAAU,iBAAb,iCAKF,wBAAQA,UAAU,kCAChBC,QA/Cc,WACdI,EAAe,MACfE,EAAa,KACbE,EAAe,OA2CjB,SAGA,mBAAGT,UAAU,iBAAb,6BCtIewC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e5b0b603.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Length=({title,changeTime,type,time,formatTime})=> {\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n            <div className=\"time-sets\">\r\n              <button className=\"btn-small deep-purple lighten-2\"\r\n                onClick={()=>changeTime(-60,type)}\r\n              >\r\n                    <i className=\"material-icons\">arrow_downward</i>\r\n               \r\n                </button>\r\n                <h3>{formatTime(time)}</h3>\r\n                <button className=\"btn-small deep-purple lighten-2\"\r\n                       onClick={()=>changeTime(60,type)}\r\n                >\r\n                    <i className=\"material-icons\">arrow_upward</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Length\r\n","export default __webpack_public_path__ + \"static/media/beep.1ea8a50a.mp3\";","import './App.css';\nimport {useState,useEffect, React } from 'react';\nimport Length from './Length'\nimport audio from './beep.mp3'\n\n\n\nfunction App() {\nconst[displayTime,setDisplayTime] = useState(25*60);\nconst[breakTime,setBreakTime] = useState(5*60);\nconst[sessionTime,setSessionTime] = useState(25*60);\nconst[timerOn,setTimerOn] = useState(false);\nconst[onBreak,setOnBreak] = useState(false);\nconst[breakAudio,setBreakAudio] = useState(new Audio(audio));\n  \nuseEffect(() => {\n  if (displayTime <= 0) {\n    setOnBreak(true);\n    playSound();\n  } else if (!timerOn && displayTime === breakTime) {\n    setOnBreak(false);\n  }\n \n}, [displayTime, onBreak, timerOn, breakTime, sessionTime]);\n\n\n//format time\nconst formatTime =(time)=>{\n  let minutes = Math.floor(time/60);\n  let seconds = time % 60;\n  return (\n  (minutes<10?\"0\"+minutes:minutes)+\":\"\n  + (seconds<10?\"0\"+seconds:seconds)\n  )\n};\n\n//change time\nconst changeTime=(amount,type)=>{\n  if(type===\"break\"){\n    if(breakTime<=60 && amount <0){\n      return;\n    }\n      setBreakTime((prev)=>prev+amount);\n  }\n  else{\n    if(sessionTime<=60 && amount <0){\n      return;\n    }\n    setSessionTime((prev)=>prev+amount);\n    if(!timerOn){\n      setDisplayTime(sessionTime+amount);\n  }\n  }\n}\n//control time\nconst controlTime=()=>{\n  console.log('time');\n  let second = 1000;\n  let date = new Date().getTime();\n  let nextDate = new Date().getTime()+second;\n  let onBreakVariable = onBreak;\n\n  if(!timerOn){\n    let interval = setInterval(()=>{\n      date = new Date().getTime();\n      \n      if(date>nextDate){\n          setDisplayTime(prev=>{\n            if(prev<=0 && !onBreakVariable){\n              //playSound();\n              onBreakVariable = true;\n              setOnBreak(true);\n              return breakTime;\n            }\n            else if(prev<=0 && onBreakVariable){\n            //  playSound();\n              onBreakVariable = false;\n              setOnBreak(false);\n              return sessionTime;\n            }\n            return prev - 1;\n          });\n            nextDate+=second;\n        }\n    },30)\n    \n    localStorage.clear();\n    localStorage.setItem('interval-id',interval)\n  }\n  \n  if(timerOn){\n    clearInterval(localStorage.getItem('interval-id'));\n  }\n  setTimerOn(!timerOn);\n};\n\n//reset time\nconst resetTime=()=>{\n  setDisplayTime(25*60);\n  setBreakTime(5*60);\n  setSessionTime(25*60);\n};\n\n//play alarm sound\nconst playSound =()=>{\n breakAudio.currentTime = 0;\n  breakAudio.play();\n\n};\n\n  return (\n    <div className=\"center-align\">\n    \n      <h1>Pamodoro Clock</h1>\n      <div className=\"dual-container\">\n      <Length title={\"break length\"}\n        changeTime={changeTime}\n        type={\"break\"}\n        time={breakTime}\n        formatTime={formatTime}\n      />\n\n<Length title={\"session length\"}\n        changeTime={changeTime}\n        type={\"session\"}\n        time={sessionTime}\n        formatTime={formatTime}\n      />\n      </div>\n    \n<h3>{onBreak?\"Break\":\"Session\"}</h3>\n<h1>{formatTime(displayTime)}</h1>\n<button className=\"btn-large deep-purple lighten-2\"\n  onClick={controlTime}\n>\n{timerOn ?(\n    <i className=\"material-icons\">pause_circle_field</i>\n  ):\n  <i className=\"material-icons\">play_circle_field</i>\n  }\n\n</button>\n\n<button className=\"btn-large deep-purple lighten-2\"\n  onClick={resetTime}\n>\n<i className=\"material-icons\">autorenew</i>\n</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}